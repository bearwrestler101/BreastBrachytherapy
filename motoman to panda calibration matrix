
***************
***MOTOMAN*****
***************

Push tables together for this to work
Note: Converts between EE of panda and motoman (no US probe attached - to get matrices accounting for US probe: tf = motoman\panda and multiply its transpose by [1 0 0 0; 0 1 0 0; 0 0 1 0.2337; 0 0 0 1]. Use its inverse for the panda\motoman matrix)

>> transform = motoman\panda

transform =

    0.0004   -0.9408    0.0079    0.0000
    0.9961    0.0739    0.0126   -0.0000
    0.0018   -0.0364    1.0297   -0.0000
    0.4523    0.5418   -0.1090    1.0000

To use: motoman * transform -> motoman's EE position in panda base frame

>> transform = panda\motoman

transform = 

    0.0793    1.0039   -0.0129    0.0000
   -1.0632    0.0005    0.0082    0.0000
   -0.0377   -0.0017    0.9715    0.0000
    0.5361   -0.4545    0.1073    1.0000

To use: panda * transform -> panda's EE position in motoman's base frame

pan_mes_pos is an nx4 matrix of positions in panda base frame
Can take transpose of transform to switch order (will have to take transpose of position vector as well)


***************
***EM SENSOR***
***************
Results of transforms have to be multiplied by 1000
Matrices were obtained by attaching sensor to panda EE


>> transform = sens\panda

transform =

    0.0157   -0.0208   -0.9820   -0.0000
    1.0071    0.0053    0.0197    0.0000
    0.0034   -1.0071    0.0285   -0.0000
    0.4598   -0.2811    0.0175    1.0000


>> transform = panda\sens

transform =

    0.0201    0.9927    0.0048   -0.0000
   -0.0287    0.0038   -0.9923   -0.0000
   -1.0174    0.0158    0.0211   -0.0000
    0.0005   -0.4557   -0.2815    1.0000

>> panda * transform

panda is an nx4 matrix of panda EE positions in panda base frame
Can take transpose of transform to switch order (will have to take transpose of position vector as well)


*****DEPRECATED*****

Note - deprecated method and bit of script
Using rough hand-measured transform matrix and grid of positions for panda:
>> moto

moto =

         0   -1.0000         0    0.5500
    1.0000         0         0   -0.4000
         0         0    1.0000    0.1000
         0         0         0    1.0000


for i = 1:size(panda_pos,1)
motoman_pos(i,:) = moto*panda_pos(i,:)';
end
